> setwd("D:/APU/R-MLclasses/lab3")
> 
> normalize <- function(x) {
+   return ((x-min(x)) / (max(x) - min(x)))
+ }
> 
> pamiec_RAM <- c(1, 1, 1, 1, 2, 1, 2, 16, 8, 2)
> pamiec_wbudowana <- c(64, 64, 64, 256, 64, 64, 16, 256, 256, 128)
> cena <- c(2719, 2399, 3649, 2749, 3799, 2999, 2749, 12599, 7399, 5299)
> tablety <- data.frame(pamiec_RAM, pamiec_wbudowana, cena)
> 
> tablety_N <- as.data.frame(lapply(tablety, normalize))
> 
> trainData <- tablety_N
> testData <- tablety_N[1:3, ]
> 
> nn_result <- neuralnet(cena ~ pamiec_RAM + pamiec_wbudowana, data=trainData,
+                           hidden=c(3,2), threshold=0.01)
> 
> print(nn_result)
$call
neuralnet(formula = cena ~ pamiec_RAM + pamiec_wbudowana, data = trainData, 
    hidden = c(3, 2), threshold = 0.01)

$response
         cena
1  0.03137255
2  0.00000000
3  0.12254902
4  0.03431373
5  0.13725490
6  0.05882353
7  0.03431373
8  1.00000000
9  0.49019608
10 0.28431373

$covariate
      pamiec_RAM pamiec_wbudowana
 [1,] 0.00000000        0.2000000
 [2,] 0.00000000        0.2000000
 [3,] 0.00000000        0.2000000
 [4,] 0.00000000        1.0000000
 [5,] 0.06666667        0.2000000
 [6,] 0.00000000        0.2000000
 [7,] 0.06666667        0.0000000
 [8,] 1.00000000        1.0000000
 [9,] 0.46666667        1.0000000
[10,] 0.06666667        0.4666667

$model.list
$model.list$response
[1] "cena"

$model.list$variables
[1] "pamiec_RAM"       "pamiec_wbudowana"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x0000012dc9a37478>
<environment: 0x0000012dc9f0d440>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x0000012dc9a1eb68>
<environment: 0x0000012dc9f0d8d8>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
   pamiec_RAM pamiec_wbudowana       cena
1  0.00000000        0.2000000 0.03137255
2  0.00000000        0.2000000 0.00000000
3  0.00000000        0.2000000 0.12254902
4  0.00000000        1.0000000 0.03431373
5  0.06666667        0.2000000 0.13725490
6  0.00000000        0.2000000 0.05882353
7  0.06666667        0.0000000 0.03431373
8  1.00000000        1.0000000 1.00000000
9  0.46666667        1.0000000 0.49019608
10 0.06666667        0.4666667 0.28431373

$exclude
NULL

$net.result
$net.result[[1]]
            [,1]
 [1,] 0.05705531
 [2,] 0.05705531
 [3,] 0.05705531
 [4,] 0.09545122
 [5,] 0.11787024
 [6,] 0.05705531
 [7,] 0.11997662
 [8,] 0.96054316
 [9,] 0.54207394
[10,] 0.12040357


$weights
$weights[[1]]
$weights[[1]][[1]]
          [,1]       [,2]       [,3]
[1,] 0.4726546  0.8839993  0.8002004
[2,] 2.1251823 -3.9528276 -3.4072565
[3,] 1.0140186  1.3470995 -0.8229671

$weights[[1]][[2]]
           [,1]       [,2]
[1,] -3.3463544 -0.5769074
[2,]  2.3905695 -1.2906568
[3,] -0.6243448  2.3462134
[4,] -1.3547330  1.3967855

$weights[[1]][[3]]
           [,1]
[1,]  1.0218031
[2,]  0.7723244
[3,] -1.2790090



$generalized.weights
$generalized.weights[[1]]
           [,1]        [,2]
 [1,] 15.330532  0.27572517
 [2,] 15.330532  0.27572517
 [3,] 15.330532  0.27572517
 [4,]  7.629624  0.87198359
 [5,]  9.627462 -0.01987726
 [6,] 15.330532  0.27572517
 [7,]  9.970421 -0.17756875
 [8,]  9.566432 -1.81934636
 [9,]  4.592665 -0.60258278
[10,]  8.686152  0.19796399


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.6758518  0.8462934  0.4018512
[2,] -1.1122577 -1.3206354 -1.5869597
[3,]  0.2566896  1.6579504 -1.1208782

$startweights[[1]][[2]]
           [,1]       [,2]
[1,] -3.7554150 -0.7670903
[2,]  0.4495132 -1.5145942
[3,] -0.1968058  1.9385563
[4,]  0.2221586 -0.1801061

$startweights[[1]][[3]]
           [,1]
[1,]  1.1385759
[2,]  0.3632638
[3,] -0.8225832



$result.matrix
                                     [,1]
error                         0.025386925
reached.threshold             0.008597254
steps                        50.000000000
Intercept.to.1layhid1         0.472654603
pamiec_RAM.to.1layhid1        2.125182269
pamiec_wbudowana.to.1layhid1  1.014018579
Intercept.to.1layhid2         0.883999251
pamiec_RAM.to.1layhid2       -3.952827565
pamiec_wbudowana.to.1layhid2  1.347099498
Intercept.to.1layhid3         0.800200389
pamiec_RAM.to.1layhid3       -3.407256466
pamiec_wbudowana.to.1layhid3 -0.822967110
Intercept.to.2layhid1        -3.346354433
1layhid1.to.2layhid1          2.390569472
1layhid2.to.2layhid1         -0.624344839
1layhid3.to.2layhid1         -1.354732992
Intercept.to.2layhid2        -0.576907435
1layhid1.to.2layhid2         -1.290656802
1layhid2.to.2layhid2          2.346213384
1layhid3.to.2layhid2          1.396785451
Intercept.to.cena             1.021803054
2layhid1.to.cena              0.772324428
2layhid2.to.cena             -1.279008990

attr(,"class")
[1] "nn"
> plot(nn_result)
> 
> results <- compute(nn_result, testData)
> 
> ls(results)
[1] "net.result" "neurons"   
> comparison <- data.frame(actual=testData[,c('cena')], prediction=results$net.result)
> comparison
      actual prediction
1 0.03137255 0.05705531
2 0.00000000 0.05705531
3 0.12254902 0.05705531
> 